pipeline {
    agent any

    tools {
        git 'Default Git'
    }

    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
        JENKINS_PORT = '8080'
        JENKINS_AGENT_PORT = '50000'
        BACKEND_PORT = '3000'
        FRONTEND_PORT = '8000'
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the repository
                git branch: 'main', url: 'https://github.com/haikali3/mini-app-cicd.git'
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    // Build backend and frontend images
                    sh 'docker-compose build'
                }
            }
        }

        // stage('Test Backend') {
        //     steps {
        //         script {
        //             echo "Testing backend container..."
        //             sh '''
        //             # Stop and remove the existing container if it exists
        //             docker ps --filter "name=backend-test" -q | xargs -r docker stop
                    
        //             # Run the backend container
        //             docker run -d --rm --name backend-test -p 3000:3000 mini-app-cicd_backend
                    
        //             # Allow the container to start
        //             sleep 10
                    
        //             # Fetch and display container logs for debugging
        //             docker logs backend-test || echo "No logs available"
                    
        //             # Test the backend endpoint
        //             curl -f http://localhost:3000 || {
        //                 echo "Backend service did not respond on port 3000."
        //                 docker stop backend-test
        //                 exit 1
        //             }
                    
        //             # Stop the container after testing
        //             docker stop backend-test
        //             '''
        //             echo "Backend container tested successfully."
        //         }
        //     }
        // }

        // stage('Test Frontend') {
        //     steps {
        //         script {
        //             // Run frontend container and test HTTP access
        //             sh '''
        //             docker run -d --rm --name frontend-test -p 8000:80 mini-app-cicd_frontend
        //             sleep 5
        //             curl -f http://localhost:8000 || exit 1
        //             docker stop frontend-test
        //             '''
        //         }
        //     }
        // }

        stage('Deploy Application') {
            steps {
                script {
                    // Deploy the application using docker-compose
                    sh 'docker-compose down || true'
                    sh 'docker-compose up -d'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution complete!'
        }
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}